#!/usr/bin/env python3

import sys
from math import *

def get_min(sample):
    if (sample < 0):
        print("O%", end='')
    else:
        print("%0.2f%%" %(sample), end='')

def get_max(sample):
    if (sample > 100):
        print("100%", end='')
    else:
        print("%0.2f%%" %(sample), end='')

if (len(sys.argv) is not 4):
    if (len(sys.argv) == 2 and sys.argv[1] == "-h"):
        print("USAGE\n\t./209poll pSize sSize p\n\nDESCRIPTION\n\tpSize\tsize of the population\n\tsSize\tsize of the sample (supposed to be representative)\n\tp\tpercentage of voting intentions for a specific candidate")
    else:
        print ("Error: not the right number of argument")
    exit(84)
else:
    try:
        pSize = int(sys.argv[1])
        sSize = int(sys.argv[2])
        p = float(sys.argv[3])
        if (pSize <= 0):
            print("Error : pSize must be a strictly positive number")
            exit(84)
        elif (sSize >= pSize or sSize <= 0):
            print("Error : sSize can't be superior to pSize and must be strictly positive")
            exit(84)
        elif (p < 0 or p > 100):
            print("Error : p must be between 0% and 100%")
            exit(84)
        elif (pSize - 1 < 0):
            print("Error : Division by zero")
            exit(84)
        p = p / 100
        variance = ((p * (1 - p)) / sSize) * ((pSize - sSize) / (pSize - 1));
        p1 = (2 * 1.96 * sqrt(variance)) / 2 * 100
        p2 = (2 * 2.58 * sqrt(variance)) / 2 * 100
        print("population size:\t\t%d" %(pSize))
        print("sample size:\t\t\t%d" %(sSize))
        print("voting intentions:\t\t%s%%" %(sys.argv[3]))
        print("variance:\t\t\t%0.6f" %(variance))
        print("95% confidence interval:\t[", end='')
        get_min(p * 100 - p1)
        print(" ; ", end='')
        get_max(p * 100 + p1)
        print("]")
        print("99% confidence interval:\t[", end='')
        get_min(p * 100 - p2)
        print(" ; ", end='')
        get_max(p * 100 + p2)
        print("]")
        exit(0)
    except ValueError:
        print ("Error : Not the right type of parameter !")
        exit(84)
